import { MCPTool } from 'mcp-framework';
import { z } from 'zod'; const BASE_URL = process.env.UNITY_RAG_BASE_URL || 'http://127.0.0.1:8000';
export default class UnityDocsSearch extends MCPTool<{ q:string; version?:string; top_k?:number; }>{ name='unity_docs_search'; description='Search local Unity offline documentation (semantic + BM25).'; schema={ q:{type:z.string()}, version:{type:z.string().optional()}, top_k:{type:z.number().int().min(1).max(50).default(8)} }; async execute(input){ const u=new URL('/search', BASE_URL); u.searchParams.set('q',input.q); if(input.version) u.searchParams.set('version',input.version); u.searchParams.set('top_k', String(input.top_k??8)); const r=await fetch(u,{method:'GET'}); if(!r.ok) throw new Error(`/search failed (${r.status})`); return r.json(); } }
